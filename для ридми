for lesson 16
описать папки, для чего они
джинджа

<!-- <div class="container">
        <h1>Страница об авторе сайта</h1>
        <hr>
        <div>
            <!-- <span>{% about_me.name %}</span> -->
            <span>{{ about_me }}</span>
            <p></p>

        </div>
    </div> -->
    
    
    
    
    
# создание новой цитаты ! метод я пишу сразу в названии хэндлера !
@app.post("/quotes/quotes_form")


    
Если присутствует GET, тогда HEAD будет добавлен автоматически. Вам не нужно об этом заботиться. Также будьте уверены, что HEAD поддерживает HTTP RFC зависимости, так что вы можете полностью игнорировать HTTP спецификации.
Если вы ничего не знаете про HTTP методы, приводим небольшую справку:

GET
Браузер сообщает серверу, что желает получить информацию со страницы и просит отправить ее. Возможно, это самый распространенный метод.

HEAD
Браузер сообщает серверу, что желает получить информацию, но интересуется только заголовком, а не содержанием страницы. Приложение допускает запрос, в случае если GET был получен.

POST
Браузер сообщает серверу, что хочет запостить новую информацию по данному URL и сервер должен быть уверен, что сохранит ее и сделает один раз. Так обычно передается информация из HTML форм на сервер.

PUT
Очень схоже с POST, но сервер может инициировать сохранение информации несколько раз, переписывая старые значения более одного раза. Вы можете задаться вопросом: «Для чего это нужно?». Есть несколько хороших причин, чтобы делать это таким образом. Учтите, что соединение может быть потеряно во время передачи: в этой ситуации система между браузером и сервером может затребовать передачу во второй раз. С POST это невозможно, так как запрос возможен только один раз.

DELETE
Удаление информации в полученной локации.

OPTIONS
Быстрый способ для клиента выяснить какой из методов поддерживается по данному URL. Начиная с Flask 0.6 эта возможность имплементирована автоматически.



Баги:
Если нет цитат будет ошибка:
- при выборе "Случайная цитата" 
- при попытке создания цитаты

Если при создании статьи, ни чего не писать и нажать "Опубликовать", то опубликуется пустая статья

Положить в templates в разные папки статьи


